{
    "openapi": "3.0.1",
    "info": {
        "title": "v10 - Retailer API",
        "description": "The bol.com API for retailers.",
        "version": "10.x"
    },
    "servers": [
        {
            "url": "https://api.bol.com"
        }
    ],
    "security": [
        {
            "OAuth2": []
        }
    ],
    "tags": [
        {
            "name": "Insights (BETA)",
            "description": "Insights resource"
        },
        {
            "name": "Shipments (BETA)",
            "description": "Shipment resource"
        },
        {
            "name": "Subscriptions (BETA)",
            "description": "Push notification subscriptions resource"
        }
    ],
    "paths": {
        "/retailer/insights/price-star-boundaries/{ean}": {
            "get": {
                "tags": [
                    "Insights (BETA)"
                ],
                "summary": "Get price star boundaries by EAN",
                "description": "Gets a list of all price star boundaries for a specific EAN.",
                "operationId": "get-price-star-boundaries",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceStarBoundaries"
                                }
                            },
                            "application/vnd.retailer.v8+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceStarBoundaries"
                                }
                            },
                            "application/vnd.retailer.v9+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceStarBoundaries"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            },
                            "application/vnd.retailer.v8+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            },
                            "application/vnd.retailer.v9+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            },
                            "application/vnd.retailer.v8+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            },
                            "application/vnd.retailer.v9+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipments/invoices/requests": {
            "get": {
                "tags": [
                    "Shipments (BETA)"
                ],
                "summary": "Get a list of invoice requests",
                "description": "Gets a list of paginated invoice requests initiated by customers.",
                "operationId": "get-invoice-requests",
                "parameters": [
                    {
                        "name": "shipment-id",
                        "in": "query",
                        "description": "The id of the shipment.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": 541757635
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "To filter on invoice request state. You can filter on all invoice requests regardless their statuses, open invoice requests requiring your action and invoice requests uploaded with possible errors.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "OPEN",
                                "UPLOAD_ERROR",
                                "ALL"
                            ]
                        },
                        "example": "OPEN"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceRequestsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipments/invoices/{shipment-id}": {
            "post": {
                "tags": [
                    "Shipments (BETA)"
                ],
                "summary": "Upload an invoice for shipment id",
                "description": "Uploads an invoice associated with shipment id.",
                "operationId": "upload-invoice",
                "parameters": [
                    {
                        "name": "shipment-id",
                        "in": "path",
                        "description": "The id of the shipment associated with the invoice.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 541757635
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "invoice"
                                ],
                                "type": "object",
                                "properties": {
                                    "invoice": {
                                        "type": "string",
                                        "description": "The invoice file.",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type: Content-Type header contains invalid value, allowed value is multipart/form-data.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions (BETA)"
                ],
                "summary": "Retrieve Event Notification Subscriptions",
                "description": "Retrieves all event notification subscriptions for a given retailer. Each subscription may have different types of events and a destination, which could either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "get-push-notification-subscriptions",
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriptions (BETA)"
                ],
                "summary": "Create Event Notification Subscription",
                "description": "Creates a new event notification subscription for a retailer. The subscription can be set up for one or more types of events and the destination can either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "post-push-notification-subscription",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions/signature-keys": {
            "get": {
                "tags": [
                    "Subscriptions (BETA)"
                ],
                "summary": "Retrieve public keys for push notification signature validation.",
                "description": "Retrieve a list of public keys that should be used to validate the signature header for push notifications received from bol.com.",
                "operationId": "get-subscription-keys",
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeySetResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions/test/{subscription-id}": {
            "post": {
                "tags": [
                    "Subscriptions (BETA)"
                ],
                "summary": "Send test push notification for subscriptions",
                "description": "Send a test push notification to all subscriptions for the provided event.",
                "operationId": "post-test-push-notification",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions/{subscription-id}": {
            "get": {
                "tags": [
                    "Subscriptions (BETA)"
                ],
                "summary": "Retrieve Specific Event Notification Subscription",
                "description": "Fetches the details of a specific event notification subscription for a retailer. The details include the types of events and the destination, which can either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "get-push-notification-subscription",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscriptions (BETA)"
                ],
                "summary": "Update Event Notification Subscription",
                "description": "Updates the details of a specific event notification subscription for a retailer. The updates can be made to the types of events and/or the destination, which can either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "put-push-notification-subscription",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subscriptions (BETA)"
                ],
                "summary": "Remove Event Notification Subscription",
                "description": "Deletes a specific event notification subscription associated with a retailer.",
                "operationId": "delete-push-notification-subscription",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Link": {
                "required": [
                    "href",
                    "method",
                    "rel"
                ],
                "type": "object",
                "properties": {
                    "rel": {
                        "type": "string",
                        "description": "The link relation.",
                        "example": "self"
                    },
                    "href": {
                        "type": "string",
                        "description": "The URI for the resource linked to.",
                        "example": "https://api.bol.com/shared/process-status/1234567"
                    },
                    "method": {
                        "type": "string",
                        "description": "The HTTP method to use when accessing the link.",
                        "example": "GET"
                    }
                },
                "description": "Lists available actions applicable to this endpoint."
            },
            "ProcessStatus": {
                "required": [
                    "createTimestamp",
                    "description",
                    "eventType",
                    "links",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "processStatusId": {
                        "type": "string",
                        "description": "The process status id.",
                        "example": "1234567"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "The id of the object being processed. For example, in case of a shipment process id, you will receive the id of the order item being processed.",
                        "example": "987654321"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "Name of the requested action that is being processed.",
                        "example": "CONFIRM_SHIPMENT"
                    },
                    "description": {
                        "type": "string",
                        "description": "Describes the action that is being processed.",
                        "example": "Example process status description for processing 987654321."
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the action being processed.",
                        "example": "SUCCESS",
                        "enum": [
                            "PENDING",
                            "SUCCESS",
                            "FAILURE",
                            "TIMEOUT"
                        ]
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Shows error message if applicable.",
                        "example": "Example process status error message."
                    },
                    "createTimestamp": {
                        "type": "string",
                        "description": "Time of creation of the response.",
                        "format": "date-time",
                        "example": "2018-11-14T09:34:41+01:00"
                    },
                    "links": {
                        "type": "array",
                        "description": "Lists available actions applicable to this endpoint.",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    }
                }
            },
            "Problem": {
                "required": [
                    "detail",
                    "status",
                    "title",
                    "type",
                    "violations"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type URI for this problem. Fixed value: https://api.bol.com/problems.",
                        "format": "uri",
                        "example": "https://api.bol.com/problems"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title describing the nature of the problem.",
                        "example": "Error validating request. Consult the bol.com API documentation for more information."
                    },
                    "status": {
                        "type": "integer",
                        "description": "HTTP status returned from the endpoint causing the problem.",
                        "format": "int32"
                    },
                    "detail": {
                        "type": "string",
                        "description": "Detailed error message describing in additional detail what caused the service to return this problem.",
                        "example": "Bad request"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host identifier describing the server instance that reported the problem.",
                        "example": "Instance-001"
                    },
                    "instance": {
                        "type": "string",
                        "description": "Full URI path of the resource that reported the problem.",
                        "format": "uri",
                        "example": "https://api.bol.com//retailer/resource"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Violation"
                        }
                    }
                },
                "description": "Describes a problem that occurred interacting with the API."
            },
            "Violation": {
                "required": [
                    "name",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Describes the origin of the error, for instance a field or query parameter validation error.",
                        "example": "exampleValue"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Detailed description of the validation error that caused the problem.",
                        "example": "Request contains invalid value(s): 'INVALID', allowed values: ALLOWED_VALUE1, ALLOWED_VALUE2."
                    }
                },
                "description": "Describes a violation that occurred interacting with the API."
            },
            "SubscriptionRequest": {
                "required": [
                    "resources",
                    "subscriptionType",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "resources": {
                        "type": "array",
                        "description": "Array of event types for which the subscription is set. Note that some event types are only available for certain subscription types.",
                        "items": {
                            "type": "string",
                            "description": "Array of event types for which the subscription is set. Note that some event types are only available for certain subscription types.",
                            "enum": [
                                "PROCESS_STATUS",
                                "SHIPMENT",
                                "OFFER",
                                "PRICE_STAR_BOUNDARY",
                                "COMPETING_OFFER"
                            ]
                        }
                    },
                    "url": {
                        "type": "string",
                        "description": "The destination for event notifications. For WEBHOOK subscription types, this is the URL where messages are posted to. For GCP_PUBSUB, this is the topic name.",
                        "example": "https://www.bol.com/webhook"
                    },
                    "subscriptionType": {
                        "type": "string",
                        "description": "The type of subscription. It indicates the platform where the events will be subscribed to. Be aware that certain event types are only available for specific types.",
                        "example": "WEBHOOK",
                        "enum": [
                            "WEBHOOK",
                            "GCP_PUBSUB"
                        ]
                    }
                }
            },
            "SubscriptionResponse": {
                "required": [
                    "id",
                    "resources",
                    "subscriptionType",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "example": "1234"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Array of event types for which the subscription is set. Note that some event types are only available for certain subscription types.",
                            "enum": [
                                "TEST",
                                "PROCESS_STATUS",
                                "SHIPMENT",
                                "OFFER",
                                "PRICE_STAR_BOUNDARY",
                                "COMPETING_OFFER"
                            ]
                        }
                    },
                    "url": {
                        "type": "string",
                        "description": "The destination for event notifications. For WEBHOOK subscription types, this is the URL where messages are posted to. For GCP_PUBSUB, this is the topic name.",
                        "example": "https://www.bol.com/webhook"
                    },
                    "subscriptionType": {
                        "type": "string",
                        "description": "The type of subscription. It indicates the platform where the events will be subscribed to. Be aware that certain event types are only available for specific types.",
                        "example": "WEBHOOK",
                        "enum": [
                            "WEBHOOK",
                            "GCP_PUBSUB"
                        ]
                    }
                }
            },
            "SubscriptionsResponse": {
                "required": [
                    "subscriptions"
                ],
                "type": "object",
                "properties": {
                    "subscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionResponse"
                        }
                    }
                }
            },
            "KeySet": {
                "required": [
                    "id",
                    "publicKey",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Key identifier. Maps to the keyId value in the signature header of the push request.",
                        "example": "0"
                    },
                    "type": {
                        "type": "string",
                        "description": "Key encryption type.",
                        "example": "RSA",
                        "enum": [
                            "RSA"
                        ]
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The Base64 encoded public key to use when verifying the signature.",
                        "example": "MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCDO7X3OGEqB6LU2ZQdznuYJX1KhCiJUB0+IwW9UjcgbU2Y/LzUIgGPT33s/+OqqMQOtXp2RV4JM6Zv5/YUZgZAqEIkvvrIYvJB8tXv73VQS2r4Ssy3Y/frJsqy8a3sDOoFeJygHYE6kVf3sOCdo4CO6PFUe7ZwsOSS2/7fNWAaMhY6tEuZwkA7ZLoSd3UHTdeKlV1TH5I3yFClMo1FwABsWzj9DhvEb6Q36j+QLJZAj0xvusJUsOjcSgyXRzVBFtwwNILzs9BO+GWRI4li+rjhaST2pNtvGfnQB5TUOO7Yegk/ucSiV1cFzy95gWQV2F0c9P1vBctETrYKxQBklBbjAgMBAAECggEAGISLVoi9/nA2x7VuqrLs/FvksItIV38UN4urgtddXT2OhcqSLL+9styTFjgofLXTCzx0iKwlCWsQ6U9Y9i6pdGL7GIplqBJ0WEXaGl2OeVXdwk2XOZv/sXsp24yzhapT/nmuKWvZvOtyl9//1vO5DPoQPExwpVUnHxji4SjDr6DuKVNDwh9Z4mVsdfdYVeLYGJ356IGWhTu/JDie4byl8B75UgbmyvfJRjQkoLpVZuhu+jkmhogpoSl6NtaKA+iFlGT9JLtGVHDn15kdEHb+dtzTzyJH40KGjQ7OiZcmA8GFft6zrNlOpyziH7fICtt0//7fR348/Z+XIYUFqfadQQKBgQDeVnqAlkt2Uab/1OjX9O8CRWqdoFLpUGDiHhkaXEylJtm1osFHGiyOi1eEQOy//lnJWKUp7c0b8D/QioP7kI38ES1mBx1KDzFgob4p/U+4R+z24SV/Q3CT6vHbfbe1XxWvE4SOdh4p7+Kuhxz1n6P0TWltvsTbpCJ9GM4wi2Z26QKBgQCXGiObkJI4Wv6RGxq76BHEDZdrLWppXh1+FYfyUaq6bfcSF86yAIRlleEJUh1v9KDw2DCX0rhO3BW0juEl5qz5RohLIxuak+2RbX6IQrVPwtCCeGQzKIRPktht+fi+eSaa5XNMLXURTzjVUdxzFwqDKp+7YQWL8DJ6qEfJGGYX6wKBgBXM8PIOypNtaiyHmdUjBRR57fxKrhaGdRl2zgtRpYpEBvDSZpUsMdZAP3KOUyh4LiGZ+Yfk80mcAwXVrx9Ji0J+BK+OXwbV+od5FIZVei2dj9SdOuoBmNZIITLeXtb/3cZu6X52gnqmNNncEbDb2F2qAX5rSC4pJ+CQQBduc7uRAoGAHzjxfqWi8S4sSAOXxJgxg5djYGwj/t3JrlH4o2OoqZkrYnu05CcjNHKB65EiKq3sM5gYgmayWukzOvoDH/fIakHey9fXTluezVwYt0NBf9e7ihoiakfG/0JSonbypTkXdw5OgsEp3YfHMJ0XtlhefbgDBY8IvF/HrnyzSKRYBD0CgYBlq6nIEZOIqngHdtskT8JOZBcniVPGjUjSiNcYQXfeMwKINUqDGC/YmpPgBOhO93ozeQTCBeeMD8nlbkTHPu7BxCCfpKj6/PPMfxmyFQyDg9ZjjHOIhUMddRw+mSq0zS212JbIr3O4eEtrXPqWfq5phxyE3dRvaX3A3wiEQN9WRA=="
                    }
                }
            },
            "KeySetResponse": {
                "required": [
                    "signatureKeys"
                ],
                "type": "object",
                "properties": {
                    "signatureKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeySet"
                        }
                    }
                }
            },
            "BillingDetails": {
                "required": [
                    "salutation"
                ],
                "type": "object",
                "properties": {
                    "salutation": {
                        "type": "string",
                        "description": "The salutation of the customer.",
                        "example": "MALE",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "UNKNOWN"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the customer.",
                        "example": "Billie"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The surname of the customer.",
                        "example": "Jansen"
                    },
                    "streetName": {
                        "type": "string",
                        "description": "The street name.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension on the house number.",
                        "example": "B"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The ZIP code in '1234AB' format for NL orders and '0000' format for BE orders.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The name of the city.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code.",
                        "example": "NL"
                    },
                    "company": {
                        "type": "string",
                        "description": "The company name.",
                        "example": "bol.com"
                    },
                    "vatNumber": {
                        "type": "string",
                        "description": "The Value Added Tax (VAT) / BTW number for business sellers situated in the Netherlands.",
                        "example": "NL999999999B99"
                    },
                    "kvkNumber": {
                        "type": "string",
                        "description": "The Kamer van Koophandel (KvK) number for organizations situated in the Netherlands or ondernemingsnummer for organizations situated in Belgium.",
                        "example": "99887766"
                    }
                },
                "description": "The details of the customer that is responsible for the financial fulfillment of this shipment."
            },
            "InvoiceRequests": {
                "required": [
                    "shipmentId",
                    "status",
                    "statusTransitions"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "type": "string",
                        "description": "The id of the shipment associated with this invoice request.",
                        "example": "987654"
                    },
                    "orderId": {
                        "type": "string",
                        "description": "The id of the order associated with this shipment.",
                        "example": "4691862037"
                    },
                    "customerAccountNumber": {
                        "type": "string",
                        "description": "The account of the customer within bol.com associated with this shipment.",
                        "example": "3004850316"
                    },
                    "billingDetails": {
                        "$ref": "#/components/schemas/BillingDetails"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Products"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the invoice request.",
                        "example": "INVOICE_REQUESTED"
                    },
                    "statusTransitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StatusTransitions"
                        }
                    }
                }
            },
            "InvoiceRequestsResponse": {
                "required": [
                    "invoiceRequests"
                ],
                "type": "object",
                "properties": {
                    "invoiceRequests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceRequests"
                        }
                    }
                }
            },
            "Products": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the ordered product.",
                        "example": "Eucerin Hyaluron-filler"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Amount of the product being ordered.",
                        "format": "int32"
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "The selling price to the customer of a single unit including VAT.",
                        "example": 10
                    }
                }
            },
            "StatusTransitions": {
                "required": [
                    "status",
                    "statusDateTime"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of this invoice request.",
                        "example": "INVOICE_REQUESTED",
                        "enum": [
                            "INVOICE_REQUESTED",
                            "INVOICE_UPLOADED",
                            "INVOICE_INCORRECT",
                            "INVOICE_VIRUS_DETECTED",
                            "FINISHED"
                        ]
                    },
                    "statusDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format that indicates when this status was updated for this invoice request.",
                        "format": "date-time",
                        "example": "2020-12-09T12:34:56+01:00"
                    }
                }
            },
            "PriceStarBoundaries": {
                "required": [
                    "lastModifiedDateTime",
                    "priceStarBoundaryLevels"
                ],
                "type": "object",
                "properties": {
                    "lastModifiedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when boundaries updated for the last time.",
                        "format": "date-time",
                        "example": "2022-01-07T03:18:38.228164+01:00"
                    },
                    "priceStarBoundaryLevels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceStarBoundaryLevels"
                        }
                    }
                }
            },
            "PriceStarBoundaryLevels": {
                "required": [
                    "boundaryPrice",
                    "level"
                ],
                "type": "object",
                "properties": {
                    "level": {
                        "type": "integer",
                        "description": "The level of the price star boundary.",
                        "format": "int32",
                        "example": 5
                    },
                    "boundaryPrice": {
                        "type": "number",
                        "description": "The boundary price of the corresponding level.",
                        "example": 41
                    }
                }
            }
        },
        "securitySchemes": {
            "OAuth2": {
                "type": "http",
                "description": "JWT-based access to api.bol.com",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}
